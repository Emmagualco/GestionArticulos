{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\GestionArticulos\\\\frontend\\\\src\\\\components\\\\ImportExcel.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ExcelJS from \"exceljs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportExcel = ({\n  onData\n}) => {\n  _s();\n  const [feedback, setFeedback] = React.useState(\"\");\n  const handleFileUpload = async e => {\n    try {\n      const file = e.target.files[0];\n      if (!file) return;\n      const workbook = new ExcelJS.Workbook();\n      const arrayBuffer = await file.arrayBuffer();\n      await workbook.xlsx.load(arrayBuffer);\n      const worksheet = workbook.worksheets[0];\n      const data = [];\n      const headers = worksheet.getRow(1).values.slice(1).map((h, i) => h ? h.toString() : `column${i + 1}`);\n      worksheet.eachRow((row, rowNumber) => {\n        if (rowNumber === 1) return;\n        const rowData = row.values.slice(1);\n        const item = {};\n        headers.forEach((header, i) => {\n          item[header.toLowerCase()] = rowData[i];\n        });\n        data.push(item);\n      });\n      onData(data);\n      setFeedback(\"Archivo importado correctamente\");\n    } catch (error) {\n      setFeedback(\"Error al importar el archivo\");\n      console.error(\"Error al importar el Excel:\", error);\n    }\n  };\n  const [fileName, setFileName] = React.useState(\"\");\n  const [selectedFile, setSelectedFile] = React.useState(null);\n  const fileInputRef = React.useRef();\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleChange = e => {\n    const file = e.target.files[0];\n    setFileName(file ? file.name : \"\");\n    setSelectedFile(file || null);\n  };\n  const handleUpload = () => {\n    if (selectedFile) {\n      const event = {\n        target: {\n          files: [selectedFile]\n        }\n      };\n      handleFileUpload(event);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '1.5rem',\n        marginBottom: '18px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"import-title\",\n        style: {\n          margin: 0,\n          flex: 1\n        },\n        children: \"Importar Art\\xEDculos desde Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '1rem',\n        marginBottom: '12px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \".xlsx,.xls\",\n        onChange: handleChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"form-panel-button\",\n        onClick: handleButtonClick,\n        children: \"Seleccionar archivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '1rem',\n          color: '#24416b',\n          marginLeft: '0.5rem',\n          fontWeight: 600,\n          fontFamily: 'Montserrat, Segoe UI, Arial, sans-serif'\n        },\n        children: fileName ? fileName : \"Sin archivos seleccionados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"form-panel-button upload-highlight\",\n        style: {\n          marginLeft: '8px',\n          boxShadow: '0 6px 24px #2980b9',\n          background: 'linear-gradient(90deg, #2980b9 0%, #6dd5fa 100%)',\n          fontWeight: '900',\n          border: '2px solid #2980b9',\n          color: '#fff'\n        },\n        onClick: handleUpload,\n        children: \"Subir archivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '1rem',\n          color: feedback.includes('correctamente') ? '#27ae60' : '#c0392b',\n          fontWeight: 700,\n          fontSize: '1rem'\n        },\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportExcel, \"RYL1IpfPtSV0WgrQ/Gv/rIsJNGA=\");\n_c = ImportExcel;\nexport default ImportExcel;\nvar _c;\n$RefreshReg$(_c, \"ImportExcel\");","map":{"version":3,"names":["React","ExcelJS","jsxDEV","_jsxDEV","ImportExcel","onData","_s","feedback","setFeedback","useState","handleFileUpload","e","file","target","files","workbook","Workbook","arrayBuffer","xlsx","load","worksheet","worksheets","data","headers","getRow","values","slice","map","h","i","toString","eachRow","row","rowNumber","rowData","item","forEach","header","toLowerCase","push","error","console","fileName","setFileName","selectedFile","setSelectedFile","fileInputRef","useRef","handleButtonClick","current","click","handleChange","name","handleUpload","event","style","width","children","display","alignItems","justifyContent","gap","marginBottom","className","margin","flex","_jsxFileName","lineNumber","columnNumber","ref","type","accept","onChange","onClick","fontSize","color","marginLeft","fontWeight","fontFamily","boxShadow","background","border","includes","_c","$RefreshReg$"],"sources":["D:/GitHub/GestionArticulos/frontend/src/components/ImportExcel.js"],"sourcesContent":["import React from \"react\";\r\nimport ExcelJS from \"exceljs\";\r\n\r\nconst ImportExcel = ({ onData }) => {\r\n  const [feedback, setFeedback] = React.useState(\"\");\r\n  const handleFileUpload = async (e) => {\r\n    try {\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n\r\n      const workbook = new ExcelJS.Workbook();\r\n      const arrayBuffer = await file.arrayBuffer();\r\n      await workbook.xlsx.load(arrayBuffer);\r\n\r\n      const worksheet = workbook.worksheets[0];\r\n      const data = [];\r\n\r\n      const headers = worksheet\r\n        .getRow(1)\r\n        .values.slice(1)\r\n        .map((h, i) => (h ? h.toString() : `column${i + 1}`));\r\n\r\n      worksheet.eachRow((row, rowNumber) => {\r\n        if (rowNumber === 1) return;\r\n        const rowData = row.values.slice(1);\r\n        const item = {};\r\n        headers.forEach((header, i) => {\r\n          item[header.toLowerCase()] = rowData[i];\r\n        });\r\n        data.push(item);\r\n      });\r\n\r\n      onData(data);\r\n      setFeedback(\"Archivo importado correctamente\");\r\n    } catch (error) {\r\n      setFeedback(\"Error al importar el archivo\");\r\n      console.error(\"Error al importar el Excel:\", error);\r\n    }\r\n  };\r\n\r\n  const [fileName, setFileName] = React.useState(\"\");\r\n  const [selectedFile, setSelectedFile] = React.useState(null);\r\n  const fileInputRef = React.useRef();\r\n\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setFileName(file ? file.name : \"\");\r\n    setSelectedFile(file || null);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (selectedFile) {\r\n      const event = { target: { files: [selectedFile] } };\r\n      handleFileUpload(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '1.5rem', marginBottom: '18px', width: '100%' }}>\r\n        <h2 className=\"import-title\" style={{ margin: 0, flex: 1 }}>Importar Art√≠culos desde Excel</h2>\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '1rem', marginBottom: '12px', width: '100%' }}>\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          accept=\".xlsx,.xls\"\r\n          onChange={handleChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <button type=\"button\" className=\"form-panel-button\" onClick={handleButtonClick}>\r\n          Seleccionar archivo\r\n        </button>\r\n        <span style={{ fontSize: '1rem', color: '#24416b', marginLeft: '0.5rem', fontWeight: 600, fontFamily: 'Montserrat, Segoe UI, Arial, sans-serif' }}>\r\n          {fileName ? fileName : \"Sin archivos seleccionados\"}\r\n        </span>\r\n        {selectedFile && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"form-panel-button upload-highlight\"\r\n            style={{ marginLeft: '8px', boxShadow: '0 6px 24px #2980b9', background: 'linear-gradient(90deg, #2980b9 0%, #6dd5fa 100%)', fontWeight: '900', border: '2px solid #2980b9', color: '#fff' }}\r\n            onClick={handleUpload}\r\n          >\r\n            Subir archivo\r\n          </button>\r\n        )}\r\n        {feedback && (\r\n          <span style={{ marginLeft: '1rem', color: feedback.includes('correctamente') ? '#27ae60' : '#c0392b', fontWeight: 700, fontSize: '1rem' }}>{feedback}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportExcel;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}